<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <appSettings>
    <add key="SyncCurrency" value="USD,GBP,AUD" />
    <add key="BuyValue" value="buying_sight"/>
    <add key="SellValue" value="selling"/>
      <!--buying_sight,buying_transfer,selling,mid_rate-->
    <add key="LOG4NET_DEBUG" value=".\Log4net_DEBUG.txt" />
    <add key="LOG4NET_ERROR" value=".\Log4net_ERROR.txt" />
    <!--client : 900-->
    <add key="SAPServerHost" value="sapeccprd.malee.co.th" />
    <add key="SAPSystemNumber" value="00" />
    <add key="SAPSystemID" value="EAP" />
    <add key="SAPUser" value="MGCRFC" />
    <add key="SAPPassword" value="RFC@Malee" />
    <add key="SAPClient" value="900" />

  </appSettings>

  <log4net>
    <!--
  This writes the log information to the console window.  It only logs events
  that are at least at the INFO level (which would mean that DEBUG events are not
  captured.
  -->
    <!--<appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{ABSOLUTE} [%thread] %level %logger - %message%newlineExtra Info: %property{testProperty}%newline%exception"/>
      </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="INFO"/>
        <levelMax value="FATAL"/>
      </filter>
    </appender>-->
    <!--
  This stores information in the mylogfile.txt file.  It only captures log events
  that contain the key word test or error.
  -->
    <appender name="DEBUGFILE" type="log4net.Appender.RollingFileAppender">
      <!--<file value="D://log4net.txt"/>-->
      <file type="log4net.Util.PatternString" value="%property{LOG4NET_DEBUG}" />
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <!--<filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="test"/>
      </filter>
      <filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="error"/>
      </filter>-->
      <!--<filter type="log4net.Filter.DenyAllFilter"/>-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %level %logger - %message%newline%exception"/>
      </layout>
    </appender>
    <appender name="ERRORFILE" type="log4net.Appender.RollingFileAppender">
      <!--<file value="D://log4net.txt"/>-->
      <file type="log4net.Util.PatternString" value="%property{LOG4NET_ERROR}" />
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <!--<filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="test"/>
      </filter>
      <filter type="log4net.Filter.StringMatchFilter">
        <stringToMatch value="error"/>
      </filter>-->
      <!--<filter type="log4net.Filter.DenyAllFilter"/>-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %level %logger - %message%newline%exception"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="DEBUGFILE"/>
    </root>
    <!--<logger name="CustomerApp.Services.MailService" additivity="false">
      <level value="DEBUG"/>
      <appender-ref ref="DEBUGFILE"/>
      -->
    <!--IF additivity="true" THIS WILL GENERATE DUB LINE DUE TO WE ALREADY HAVE <appender-ref ref="RollingFileAppender"/> IN ROOT AND LOGGER WILL INHERIT FROM ROOT-->
    <!--
    </logger>-->
  </log4net>
</configuration>